From a2b289361d90360c37eb19cca2cf1216ab60fb7b Mon Sep 17 00:00:00 2001
From: Kevin McCarthy <kevin@8t8.us>
Date: Wed, 29 Aug 2018 15:08:19 -0700
Subject: [PATCH] Rename pgpring to mutt_pgpring.

pgpring is used by another common package, signing-party.  At the
request of ArchLinux, I am renaming our version to be prefixed by
"mutt_" in order to remove a naming conflict.

This is a minor inconvenience for pgp2, pgp5, and pgp6 users, but I
believe this constitutes an extremely small number of users at this
point.

I am keeping pgpewrap as-is because it is also used by GnuPG, and has
no such naming conflict.
---
 .gitignore        |  4 ++--
 Makefile.am       |  8 ++++----
 configure.ac      |  2 +-
 contrib/pgp2.rc   |  4 ++--
 contrib/pgp5.rc   |  4 ++--
 contrib/pgp6.rc   |  4 ++--
 doc/Makefile.am   | 10 +++++-----
 doc/PGP-Notes.txt |  8 ++++----
 doc/mutt.man      |  2 +-
 doc/pgpring.man   | 10 +++++-----
 init.h            |  4 ++--
 11 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 38ea0774..950b66b7 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -3,7 +3,7 @@
 include $(top_srcdir)/flymake.am
 
 AUTOMAKE_OPTIONS = 1.6 foreign
-EXTRA_PROGRAMS = mutt_dotlock pgpring pgpewrap mutt_md5
+EXTRA_PROGRAMS = mutt_dotlock mutt_pgpring pgpewrap mutt_md5
 
 if BUILD_DOC
 DOC_SUBDIR = doc
@@ -85,9 +85,9 @@ mutt_dotlock_SOURCES = mutt_dotlock.c
 mutt_dotlock_LDADD = $(LIBOBJS)
 mutt_dotlock_DEPENDENCIES = $(LIBOBJS)
 
-pgpring_SOURCES = pgppubring.c pgplib.c lib.c extlib.c sha1.c md5.c pgppacket.c ascii.c
-pgpring_LDADD = $(LIBOBJS) $(INTLLIBS)
-pgpring_DEPENDENCIES = $(LIBOBJS) $(INTLDEPS)
+mutt_pgpring_SOURCES = pgppubring.c pgplib.c lib.c extlib.c sha1.c md5.c pgppacket.c ascii.c
+mutt_pgpring_LDADD = $(LIBOBJS) $(INTLLIBS)
+mutt_pgpring_DEPENDENCIES = $(LIBOBJS) $(INTLDEPS)
 
 mutt_md5_SOURCES = md5.c
 mutt_md5_CFLAGS = -DMD5UTIL
diff --git a/configure.ac b/configure.ac
index bc5abc93..28091866 100644
--- a/configure.ac
+++ b/configure.ac
@@ -159,7 +159,7 @@ AC_ARG_ENABLE(pgp, AS_HELP_STRING([--disable-pgp],[Disable PGP support]),
 
 if test x$have_pgp != xno ; then
         AC_DEFINE(CRYPT_BACKEND_CLASSIC_PGP,1, [Define if you want classic PGP support.])
-        PGPAUX_TARGET="pgpring\$(EXEEXT) pgpewrap\$(EXEEXT)"
+        PGPAUX_TARGET="mutt_pgpring\$(EXEEXT) pgpewrap\$(EXEEXT)"
         MUTT_LIB_OBJECTS="$MUTT_LIB_OBJECTS pgp.o pgpinvoke.o pgpkey.o pgplib.o gnupgparse.o pgpmicalg.o pgppacket.o crypt-mod-pgp-classic.o"
 fi
 
diff --git a/contrib/pgp2.rc b/contrib/pgp2.rc
index 21280453..f7fc1327 100644
--- a/contrib/pgp2.rc
+++ b/contrib/pgp2.rc
@@ -42,10 +42,10 @@ set pgp_export_command="pgp -kxaf +language=mutt %r"
 set pgp_verify_key_command="pgp -kcc +language=mutt %r"
 
 # read in the public key ring
-set pgp_list_pubring_command="pgpring -2 %r"
+set pgp_list_pubring_command="mutt_pgpring -2 %r"
 
 # read in the secret key ring
-set pgp_list_secring_command="pgpring -s -2 %r"
+set pgp_list_secring_command="mutt_pgpring -s -2 %r"
 
 # pattern for good signature
 set pgp_good_sign="Good signature"
diff --git a/contrib/pgp5.rc b/contrib/pgp5.rc
index 61d1c2c9..7ae0af48 100644
--- a/contrib/pgp5.rc
+++ b/contrib/pgp5.rc
@@ -39,9 +39,9 @@ set pgp_export_command="pgpk -xa +language=mutt --OutputInformationFD=1 %r"
 set pgp_verify_key_command="pgpk -c +batchmode +language=mutt --OutputInformationFD=1 %r"
 
 # read in the public key ring
-set pgp_list_pubring_command="pgpring -5 %r" 
+set pgp_list_pubring_command="mutt_pgpring -5 %r" 
 
 # read in the secret key ring
-set pgp_list_secring_command="pgpring -5 -s %r"
+set pgp_list_secring_command="mutt_pgpring -5 -s %r"
 
 
diff --git a/contrib/pgp6.rc b/contrib/pgp6.rc
index a5fca654..da16d54e 100644
--- a/contrib/pgp6.rc
+++ b/contrib/pgp6.rc
@@ -36,10 +36,10 @@ set pgp_export_command="pgp6 +compatible  -kxaf  %r"
 set pgp_verify_key_command="pgp6 +compatible  -kcc  %r"
 
 # read in the public key ring
-set pgp_list_pubring_command="pgpring -5 %r"
+set pgp_list_pubring_command="mutt_pgpring -5 %r"
 
 # read in the secret key ring
-set pgp_list_secring_command="pgpring -s -5 %r"
+set pgp_list_secring_command="mutt_pgpring -s -5 %r"
 
 # create a clearsigned message
 set pgp_clearsign_command="PGPPASSFD=0; export PGPPASSFD; cat - %f | pgp6 +compatible   +verbose=0 +batchmode +clearsig -afst %?a? -u %a?"
diff --git a/doc/Makefile.am b/doc/Makefile.am
index c612281e..4d8bef8d 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -50,7 +50,7 @@ topsrcdir_DOCFILES = COPYRIGHT GPL INSTALL ChangeLog	\
 
 all: makedoc-all
 
-makedoc-all: mutt.1 smime_keys.1 muttrc.man manual.html stamp-doc-rc stamp-doc-chunked manual.txt pgpewrap.1 pgpring.1
+makedoc-all: mutt.1 smime_keys.1 muttrc.man manual.html stamp-doc-rc stamp-doc-chunked manual.txt pgpewrap.1 mutt_pgpring.1
 
 install-data-local: makedoc-all instdoc
 	$(MKDIR_P) $(DESTDIR)$(mandir)/man1
@@ -59,7 +59,7 @@ install-data-local: makedoc-all instdoc
 	./instdoc mutt.1 $(DESTDIR)$(mandir)/man1/mutt.1
 	./instdoc smime_keys.1 $(DESTDIR)$(mandir)/man1/smime_keys.1
 	./instdoc pgpewrap.1 $(DESTDIR)$(mandir)/man1/pgpewrap.1
-	./instdoc pgpring.1 $(DESTDIR)$(mandir)/man1/pgpring.1
+	./instdoc mutt_pgpring.1 $(DESTDIR)$(mandir)/man1/mutt_pgpring.1
 	test x$(DOTLOCK_TARGET) = x || ./instdoc $(srcdir)/dotlock.man \
 		$(DESTDIR)$(mandir)/man1/mutt_dotlock.1
 	./instdoc muttrc.man $(DESTDIR)$(mandir)/man5/muttrc.5
@@ -86,7 +86,7 @@ install-data-local: makedoc-all instdoc
 	fi
 
 uninstall-local:
-	for f in mutt.1 mutt_dotlock.1 smime_keys.1 pgpewrap.1 pgpring.1; do \
+	for f in mutt.1 mutt_dotlock.1 smime_keys.1 pgpewrap.1 mutt_pgpring.1; do \
 		rm -f $(DESTDIR)$(mandir)/man1/$$f ; \
 	done
 	for f in muttrc.5 mbox.5 mmdf.5 ; do \
@@ -158,7 +158,7 @@ sortcheck: manual.xml
 	rm -rf vars.tmp.1 vars.tmp.2
 
 clean-local:
-	rm -f *~ *.html *.orig *.rej  stamp-doc-* *.ps mutt.1 smime_keys.1 muttrc.man pgpewrap.1 pgpring.1
+	rm -f *~ *.html *.orig *.rej  stamp-doc-* *.ps mutt.1 smime_keys.1 muttrc.man pgpewrap.1 mutt_pgpring.1
 	rm -f *.aux *.log *.tex *.out
 
 DISTCLEANFILES=manual.txt manual.html manual.xml manual.pdf html \
@@ -185,7 +185,7 @@ mutt.1: $(srcdir)/mutt.man
 pgpewrap.1: $(srcdir)/pgpewrap.man
 	$(EDIT) $(srcdir)/pgpewrap.man > $@
 
-pgpring.1: $(srcdir)/pgpring.man
+mutt_pgpring.1: $(srcdir)/pgpring.man
 	$(EDIT) $(srcdir)/pgpring.man > $@
 
 smime_keys.1: $(srcdir)/smime_keys.man
diff --git a/doc/PGP-Notes.txt b/doc/PGP-Notes.txt
index b292edbc..a4824535 100644
--- a/doc/PGP-Notes.txt
+++ b/doc/PGP-Notes.txt
@@ -134,7 +134,7 @@ which contains empty strings for the messages we don't want to see.
 To use this, copy either language.txt or language50.txt (depending
 on what PGP version you are using) to your $PGPPATH.  Make sure the
 PGP command formats pass "+language=pgp" to all the PGP binaries
-(but not to pgpring!).
+(but not to mutt_pgpring!).
 
 For PGP 2.6, a German version called "muttde" is available
 as well.
@@ -160,12 +160,12 @@ Auxiliary Programs
 ------------------
 
 Mutt needs two auxiliary programs for its PGP support: pgpewrap and
-pgpring.
+mutt_pgpring.
 
 
-1. pgpring
+1. mutt_pgpring
 
-pgpring is a key ring dumper.  It extracts information from PGP's
+mutt_pgpring is a key ring dumper.  It extracts information from PGP's
 binary key ring and emits it in an (almost) readable output format
 understood by mutt's key selection routines.  This output format
 mimics the one used by the GNU Privacy Guard (GPG).
diff --git a/doc/mutt.man b/doc/mutt.man
index 11225013..2a17df7a 100644
--- a/doc/mutt.man
+++ b/doc/mutt.man
@@ -165,7 +165,7 @@ If this variable is set, mailcap are always used without prompting first.
 .IP "PGPPATH"
 Directory in which the user's PGP public keyring can be found.  When used with
 the original PGP program, mutt and
-.B pgpring (1)
+.B mutt_pgpring (1)
 rely on this being set.
 .IP "TMPDIR"
 Directory in which temporary files are created.
diff --git a/doc/pgpring.man b/doc/pgpring.man
index 0009ad92..dace1ad2 100644
--- a/doc/pgpring.man
+++ b/doc/pgpring.man
@@ -1,6 +1,6 @@
 .\" -*-nroff-*-
 .\"
-.\"     pgpring, a key ring dumper
+.\"     mutt_pgpring, a key ring dumper
 .\"     Manpage Copyright (c) 2004-2013 Matthew Wilcox, Honza Horak
 .\"
 .\"     This program is free software; you can redistribute it and/or modify
@@ -17,18 +17,18 @@
 .\"     along with this program; if not, write to the Free Software
 .\"     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 .\"
-.TH pgpring 1 "May 2013" Unix "User Manuals"
+.TH mutt_pgpring 1 "May 2013" Unix "User Manuals"
 .SH NAME
-pgpring \- Mutt key ring dumper
+mutt_pgpring \- Mutt key ring dumper
 
 .SH SYNTAX
 .PP
-\fBpgpring\fP [ \fB\-k\fP \fIkeyring\fP ] [ \fB\-2\fP | \fB\-5\fP ]
+\fBmutt_pgpring\fP [ \fB\-k\fP \fIkeyring\fP ] [ \fB\-2\fP | \fB\-5\fP ]
 [ \fB\-s\fP ] [ \fB\-S\fP ] [ \fB\-f\fP ]
 
 .SH DESCRIPTION
 .PP
-pgpring is a key ring dumper.  It extracts information from PGP's
+mutt_pgpring is a key ring dumper.  It extracts information from PGP's
 binary key ring and emits it in an (almost) readable output format
 understood by mutt's key selection routines.  This output format
 mimics the one used by the GNU Privacy Guard (GPG).
diff --git a/init.h b/init.h
index b5822ef8..0688f940 100644
--- a/init.h
+++ b/init.h
@@ -2120,7 +2120,7 @@ struct option_t MuttVars[] = {
   ** gpg --list-keys --with-colons --with-fingerprint
   ** .te
   ** .pp
-  ** This format is also generated by the \fCpgpring\fP utility which comes
+  ** This format is also generated by the \fCmutt_pgpring\fP utility which comes
   ** with mutt.
   ** .pp
   ** Note: gpg's \fCfixed-list-mode\fP option should not be used.  It
@@ -2140,7 +2140,7 @@ struct option_t MuttVars[] = {
   ** gpg --list-keys --with-colons --with-fingerprint
   ** .te
   ** .pp
-  ** This format is also generated by the \fCpgpring\fP utility which comes
+  ** This format is also generated by the \fCmutt_pgpring\fP utility which comes
   ** with mutt.
   ** .pp
   ** Note: gpg's \fCfixed-list-mode\fP option should not be used.  It
-- 
2.18.0

