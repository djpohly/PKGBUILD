From 13b652e0b722f17eb52161e1f53c081bb7042fb3 Mon Sep 17 00:00:00 2001
From: jjacky <i.am.jack.mail@gmail.com>
Date: Wed, 24 Apr 2013 10:41:13 +0200
Subject: [PATCH 1/2] Revert "window: restore size after hide/show properly"

This reverts commit 38b62e4660a470cdda94480d3ab6da467125998e.

Signed-off-by: jjacky <i.am.jack.mail@gmail.com>
---
 gtk/gtkwindow.c | 65 ++++++++++++++++++++++++++++++++++++---------------------
 1 file changed, 41 insertions(+), 24 deletions(-)

diff --git a/gtk/gtkwindow.c b/gtk/gtkwindow.c
index 605bb97..afc76a9 100644
--- a/gtk/gtkwindow.c
+++ b/gtk/gtkwindow.c
@@ -141,6 +141,7 @@ struct _GtkWindowPrivate
    * and on unrealize (for size).
    */
   guint    need_default_position     : 1;
+  guint    need_default_size         : 1;
 
   guint    above_initially           : 1;
   guint    accept_focus              : 1;
@@ -1144,6 +1145,7 @@ gtk_window_init (GtkWindow *window)
   priv->resizable = TRUE;
   priv->configure_notify_received = FALSE;
   priv->position = GTK_WIN_POS_NONE;
+  priv->need_default_size = TRUE;
   priv->need_default_position = TRUE;
   priv->modal = FALSE;
   priv->gdk_type_hint = GDK_WINDOW_TYPE_HINT_NORMAL;
@@ -4929,6 +4931,7 @@ gtk_window_map (GtkWidget *widget)
     }
 
   /* No longer use the default settings */
+  priv->need_default_size = FALSE;
   priv->need_default_position = FALSE;
 
   if (priv->reset_type_hint)
@@ -5080,11 +5083,10 @@ gtk_window_guess_default_size (GtkWindow *window,
                                gint      *width,
                                gint      *height)
 {
-  GtkWidget *widget;
+  GtkWidget *widget = GTK_WIDGET (window);
   GdkScreen *screen;
   int minimum, natural;
 
-  widget = GTK_WIDGET (window);
   screen = gtk_widget_get_screen (widget);
 
   *width = gdk_screen_get_width (screen);
@@ -5352,6 +5354,7 @@ gtk_window_unrealize (GtkWidget *widget)
    *
    * Default positioning is reset on unmap, instead of unrealize.
    */
+  priv->need_default_size = TRUE;
   info = gtk_window_get_geometry_info (window, FALSE);
   if (info)
     {
@@ -6551,6 +6554,7 @@ gtk_window_compute_configure_request_size (GtkWindow   *window,
                                            gint        *width,
                                            gint        *height)
 {
+  GtkWindowPrivate *priv = window->priv;
   GtkWindowGeometryInfo *info;
   int w, h;
 
@@ -6560,32 +6564,45 @@ gtk_window_compute_configure_request_size (GtkWindow   *window,
   
   info = gtk_window_get_geometry_info (window, FALSE);
 
-  gtk_window_guess_default_size (window, width, height);
+  if (priv->need_default_size)
+    {
+      gtk_window_guess_default_size (window, width, height);
   gtk_window_get_remembered_size (window, &w, &h);
   *width = MAX (*width, w);
   *height = MAX (*height, h);
 
-  /* If window is empty so requests 0, default to random nonzero size */
-   if (*width == 0 && *height == 0)
-     {
-       *width = 200;
-       *height = 200;
-     }
-
-   /* Override with default size */
-
-   if (info)
-     {
-       if (info->default_width > 0)
-         *width = info->default_width;
-       if (info->default_height > 0)
-         *height = info->default_height;
-
-       if (info->default_is_geometry)
-         geometry_size_to_pixels (geometry, flags,
-                                  info->default_width > 0 ? width : NULL,
-                                  info->default_height > 0 ? height : NULL);
-     }
+      /* If window is empty so requests 0, default to random nonzero size */
+       if (*width == 0 && *height == 0)
+         {
+           *width = 200;
+           *height = 200;
+         }
+
+       /* Override with default size */
+
+       if (info)
+	 {
+	   if (info->default_width > 0)
+	     *width = info->default_width;
+	   if (info->default_height > 0)
+	     *height = info->default_height;
+
+	   if (info->default_is_geometry)
+	     geometry_size_to_pixels (geometry, flags,
+				      info->default_width > 0 ? width : NULL,
+				      info->default_height > 0 ? height : NULL);
+         }
+    }
+  else
+    {
+      GtkAllocation allocation;
+
+      gtk_widget_get_allocation (GTK_WIDGET (window), &allocation);
+
+      /* Default to keeping current size */
+      *width = allocation.width;
+      *height = allocation.height;
+    }
 
   /* Override any size with gtk_window_resize() values */
   if (info)
-- 
1.8.2.1

