From bf3e41c381f8e7edb92683961faffec7b49d1f41 Mon Sep 17 00:00:00 2001
From: jjacky <i.am.jack.mail@gmail.com>
Date: Mon, 27 May 2013 19:00:33 +0200
Subject: [PATCH] Add gtk_tree_selection_invert_range()

Similar to its select & unselect counterparts, but to invert the current state
of each node in the given range.

Signed-off-by: jjacky <i.am.jack.mail@gmail.com>
---
 gtk/gtk.symbols        |  1 +
 gtk/gtktreeselection.c | 37 +++++++++++++++++++++++++++++++++++--
 gtk/gtktreeselection.h |  3 +++
 3 files changed, 39 insertions(+), 2 deletions(-)

diff --git a/gtk/gtk.symbols b/gtk/gtk.symbols
index 030a06c..8c52984 100644
--- a/gtk/gtk.symbols
+++ b/gtk/gtk.symbols
@@ -3415,6 +3415,7 @@ gtk_tree_selection_get_select_function
 gtk_tree_selection_get_tree_view
 gtk_tree_selection_get_type
 gtk_tree_selection_get_user_data
+gtk_tree_selection_invert_range
 gtk_tree_selection_iter_is_selected
 gtk_tree_selection_path_is_selected
 gtk_tree_selection_select_all
diff --git a/gtk/gtktreeselection.c b/gtk/gtktreeselection.c
index 10c9cd7..395d06d 100644
--- a/gtk/gtktreeselection.c
+++ b/gtk/gtktreeselection.c
@@ -1297,7 +1297,8 @@ gtk_tree_selection_unselect_all (GtkTreeSelection *selection)
 enum
 {
   RANGE_SELECT,
-  RANGE_UNSELECT
+  RANGE_UNSELECT,
+  RANGE_INVERT
 };
 
 static gint
@@ -1355,7 +1356,10 @@ gtk_tree_selection_real_modify_range (GtkTreeSelection *selection,
 
   do
     {
-      dirty |= gtk_tree_selection_real_select_node (selection, start_tree, start_node, (mode == RANGE_SELECT)?TRUE:FALSE);
+      gboolean select;
+      select = (mode == RANGE_SELECT || (mode == RANGE_INVERT
+                  && !((start_node->flags & GTK_RBNODE_IS_SELECTED) == GTK_RBNODE_IS_SELECTED)));
+      dirty |= gtk_tree_selection_real_select_node (selection, start_tree, start_node, select);
 
       if (start_node == end_node)
 	break;
@@ -1438,6 +1442,35 @@ gtk_tree_selection_unselect_range (GtkTreeSelection *selection,
     g_signal_emit (selection, tree_selection_signals[CHANGED], 0);
 }
 
+/**
+ * gtk_tree_selection_invert_range:
+ * @selection: A #GtkTreeSelection
+ * @start_path: The initial node of the range
+ * @end_path: The final node of the range
+ *
+ * Inverts the selected state of all nodes in the range, determined by
+ * @start_path and @end_path inclusive.
+ *
+ * Since: 3.10
+ */
+void
+gtk_tree_selection_invert_range (GtkTreeSelection *selection,
+                                 GtkTreePath      *start_path,
+                                 GtkTreePath      *end_path)
+{
+  GtkTreeSelectionPrivate *priv;
+
+  g_return_if_fail (GTK_IS_TREE_SELECTION (selection));
+
+  priv = selection->priv;
+
+  g_return_if_fail (priv->tree_view != NULL);
+  g_return_if_fail (gtk_tree_view_get_model (priv->tree_view) != NULL);
+
+  if (gtk_tree_selection_real_modify_range (selection, RANGE_INVERT, start_path, end_path))
+    g_signal_emit (selection, tree_selection_signals[CHANGED], 0);
+}
+
 gboolean
 _gtk_tree_selection_row_is_selectable (GtkTreeSelection *selection,
 				       GtkRBNode        *node,
diff --git a/gtk/gtktreeselection.h b/gtk/gtktreeselection.h
index 4600930..b57e16e 100644
--- a/gtk/gtktreeselection.h
+++ b/gtk/gtktreeselection.h
@@ -139,6 +139,9 @@ void             gtk_tree_selection_select_range        (GtkTreeSelection
 void             gtk_tree_selection_unselect_range      (GtkTreeSelection            *selection,
                                                          GtkTreePath                 *start_path,
 							 GtkTreePath                 *end_path);
+void             gtk_tree_selection_invert_range        (GtkTreeSelection            *selection,
+							 GtkTreePath                 *start_path,
+							 GtkTreePath                 *end_path);
 
 
 G_END_DECLS
-- 
1.8.4

